# Test-specific configuration
spring:
  application:
    name: jwt-auth-service-test
  config:
    activate:
      on-profile: test

  # Security configuration
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:${server.port}
          jwk-set-uri: http://localhost:${server.port}/oauth2/jwks
    jwt:
      secret: test-secret-key-1234567890-1234567890-1234567890
      expiration-ms: 3600000  # 1 hour
      refresh-expiration-ms: 86400000  # 24 hours

  # Database configuration (H2 in-memory)
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;MODE=PostgreSQL
    username: sa
    password: 
    driver-class-name: org.h2.Driver
    initialization-mode: always
    platform: h2
    sql-script-encoding: UTF-8

  # H2 Console configuration
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        web-allow-others: false
        trace: false

  # JPA/Hibernate configuration
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop  # Clean up after tests
      show-sql: true
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        hbm2ddl:
          auto: create-drop
        jdbc:
          batch_size: 20
          fetch_size: 20
      javax.persistence.schema-generation.database.action: drop-and-create

  # Mail configuration (mock for testing)
  mail:
    host: localhost
    port: 1025
    properties:
      mail.smtp:
        auth: false
        starttls.enable: false

# JWT Configuration for Tests
jwt:
  cookie-name: jwt-auth-token
  refresh-cookie-name: jwt-refresh-token
  token-prefix: "Bearer "
  header: Authorization
  type: JWT
  issuer: jwt-auth-service-test
  audience: jwt-audience-test
  expiration-ms: 3600000  # 1 hour
  refresh-expiration-ms: 86400000  # 24 hours
  keystore:
    location: classpath:certs/keypair.pem
    password: changeit
    alias: jwt-key
    private-key-passphrase: changeit

# RSA Key Configuration
rsa:
  private-key-location: classpath:certs/private.pem
  public-key-location: classpath:certs/public.pem
  key-id: test-key-1

# Server configuration
server:
  port: 0  # Use random available port
  servlet:
    context-path: /

# Logging configuration
logging:
  level:
    root: INFO
    app: DEBUG
    org.springframework: WARN
    org.springframework.security: WARN
    org.springframework.web: WARN
    org.hibernate: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type: WARN

# Test properties
app:
  test:
    enabled: true
    mode: integration
    cleanup: true
